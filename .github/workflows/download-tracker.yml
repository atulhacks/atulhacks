name: Profile Download Tracker
on:
  schedule:
    - cron: '0 0 * * *'  # Daily updates
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-downloads:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Get full history
          ref: main

      - name: Setup GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install -y gh

      - name: Calculate Total Downloads
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get all repositories (handles pagination)
          repos=$(gh repo list atulhacks --limit 1000 --json name --jq '.[].name')
          
          total=0
          for repo in $repos; do
            echo "Processing $repo..."
            releases=$(gh api repos/atulhacks/$repo/releases --paginate)
            downloads=$(echo "$releases" | jq -r '.[].assets[].download_count' | awk '{sum+=$1} END {print sum+0}')
            total=$((total + downloads))
          done

          # Generate JSON with proper escaping
          jq -n \
            --arg total "$total" \
            --arg color $(if [ $total -ge 1000 ]; then echo "brightgreen"; elif [ $total -ge 500 ]; then echo "yellow"; else echo "red"; fi) \
            '{schemaVersion:1, label:"Downloads", message:$total, color:$color}' > total.json

      - name: Commit and Push Changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: "GitHub Actions"
          author_email: "actions@github.com"
          message: "ðŸ“ˆ Update download count: ${{ steps.calculate.outputs.total }}"
          add: "total.json"
          pull: --rebase  # Force rebase strategy
          push: true
          force: true
          force-add: true
